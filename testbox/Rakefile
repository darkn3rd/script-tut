
task :default do
  puts RUBY_PLATFORM.split('-')[1].scan(/[a-z]+/)
  filetype = Dir.glob('e0?.branch.*')[0].split('.')[-1]
  #scan(/\.\w+$/).lstrip()
  puts filetype
  #puts RUBY_VERSION
end

# =============================================
# Each of these tasks will have to evaluate the available excutable files
# available then execute them. and report their results.
#
# If multiple files in one category, run them all, report collective result.
# If no files in one category, report that this feature is not supported.
# =============================================

class Script
  @@command = { :awk    => "awk",
                :gawk   => "gawk",
                :groovy => "groovy",
                :pl     => "perl",
                :php    => "php",
                :py     => "python",
                :rb     => "ruby",
                :tcl    => "tclsh",
                :bash   => "bash",
                :csh    => "tcsh",
                :ksh    => "ksh",
                :sh     => "sh",
                :js     => "cscript //Nologo",
                :vbs    => "cscript //Nologo",
                :ps1    => "powershell -NoLogo -NoProfile -ExecutionPolicy Bypass -File",
                :cmd    => "cmd /c",
                :bat    => "cmd /c"
              }

  @@ostype   = RUBY_PLATFORM.split('-')[1].scan(/[a-z]+/)

  def self.runner
    @@command[Dir.glob('a00.*')[0].split('.')[-1].to_sym]
  end

  attr_accessor :ostype, :shell, :lang
end

task :execute, [:list] do |t, args|
  args["list"].each do |cmd|
    sh "#{Script.runner} #{cmd}"
  end
end


desc 'Output to Console (stdout, stderr)'
task :output

desc 'Standard Ouput'
task :stdout => :output do
  list = Dir.glob('a0?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Standard Error'
task :stderr => :output do
  list = Dir.glob('a1?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Output Here-String (or Multiline String)'
task :multiline => :output do
  list = Dir.glob('a2?.*')
  Rake::Task[:execute].invoke(list)
end

# ==============================================

desc 'Variables'
task :variables

desc 'String Concatenation'
task :concatenation => :variables do
  list = Dir.glob('b0?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'String Concatenation'
task :interpolation => :variables do
  list = Dir.glob('b1?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'String Formatting'
task :formmatting => :variables do
  list = Dir.glob('b2?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Here-String (Multiline String)'
task :herestring => :variables do
  list = Dir.glob('b3?.*')
  Rake::Task[:execute].invoke(list)
end

# ==============================================


desc 'Basic Arirthmetic'
task :arithmetic

desc 'Multiplication'
task :multiplication => :arithmetic do
  list = Dir.glob('c0?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Boolean Logic'
task :boolean => :arithmetic do
  list = Dir.glob('c1?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Exponential'
task :exponential => :arithmetic do
  list = Dir.glob('c2?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Math Function (Triganometry)'
task :mathfunction => :arithmetic do
  list = Dir.glob('c3?.*')
  Rake::Task[:execute].invoke(list)
end

# ==============================================

desc 'User Input'
task :input

desc 'Line Input'
task :line => :input do
  list = Dir.glob('d0?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Character Input'
task :char => :input do
  list = Dir.glob('d1?.*')
  Rake::Task[:execute].invoke(list)
end

# ==============================================


desc 'Branching'
task :branch

desc 'String Evaluation (Yes/No)'
task :stringeval => :branch do
  list = Dir.glob('e0?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Ternary (or single-line)'
task :ternary => :branch do
  list = Dir.glob('e1?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Number Range'
task :numrange => :branch do
  list = Dir.glob('e2?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Number Match'
task :nummatch => :branch do
  list = Dir.glob('e3?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Multiway with Number'
task :multinum => :branch do
  list = Dir.glob('e4?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Multiway with String Pattern'
task :multipattern => :branch do
  list = Dir.glob('e5?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'String Pattern'
task :singlepattern => :branch do
  list = Dir.glob('e6?.*')
  Rake::Task[:execute].invoke(list)
end

# ==============================================

desc 'Looping'
task :loop

desc 'Collection Loop'
task :collection => :loop do
  list = Dir.glob('f0?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Count Loop'
task :count => :loop do
  list = Dir.glob('f1?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Conditional Loop'
task :conditional => :loop do
  list = Dir.glob('f2?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Spin Loop'
task :spin => :loop do
  list = Dir.glob('f3?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Skipping a Loop Iteration'
task :skipping => :loop do
  list = Dir.glob('f4?.*')
  Rake::Task[:execute].invoke(list)
end

# ==============================================

desc 'Arrays (Lists)'
task :array

desc 'Array Index Assignment and Length'
task :indexlength => :array do
  list = Dir.glob('g0?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Array List Assignment and Enumeration by Item'
task :enumitem => :array do
  list = Dir.glob('g1?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Array List Assignment and Enumeration by Item'
task :enumindex => :array do
  list = Dir.glob('g2?.*')
  Rake::Task[:execute].invoke(list)
end

# ==============================================


desc 'Associative Arrays (Hash, Map, Dictionary)'
task :associative

desc 'Association Array Assignment by Key'
task :keyassign => :associative do
  list = Dir.glob('h0?.*')
  Rake::Task[:execute].invoke(list)
end


desc 'Association Array Assignment by List and Appending'
task :listassign => :associative do
  list = Dir.glob('h1?.*')
  Rake::Task[:execute].invoke(list)
end

# ==============================================


desc 'Subroutines (Procedures)'
task :subroutine

desc 'Creating and Calling'
task :createcall => :subroutine do
  list = Dir.glob('i0?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Global Variables'
task :scopeglobal => :subroutine do
  list = Dir.glob('i1?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Local Variables'
task :scopelocal => :subroutine do
  list = Dir.glob('i2?.*')
  Rake::Task[:execute].invoke(list)
end

# ==============================================


desc 'Arguments from Command-Line'
task :arguments

desc 'Usage Statement, Script Name, Argument Count'
task :usage => :arguments do
  list = Dir.glob('j0?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Enumerate Arguments in Order'
task :forward => :arguments do
  list = Dir.glob('j1?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Enumerate Arguments in Reverse Order'
task :reverse => :arguments do
  list = Dir.glob('j2?.*')
  Rake::Task[:execute].invoke(list)
end

# ==============================================


desc 'Parameters to Subroutines'
task :parameters

desc 'Passing a Single Parameter'
task :single => :parameters do
  list = Dir.glob('k0?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Passing Variable Number of Parameters'
task :dynamic => :parameters do
  list = Dir.glob('k1?.*')
  Rake::Task[:execute].invoke(list)
end

# ==============================================

desc 'Exit'
task :exit

## NOTE THIS SHOULD HAVE A POS AND NEG TEST

desc 'Reporting Status Code'
task :statuscode => :exit do
  list = Dir.glob('l0?.*')
  Rake::Task[:execute].invoke(list)
end

# ==============================================


desc 'Functions and Returning Values'
task :function

desc 'Returning a Number'
task :rtsnumber => :function do
  list = Dir.glob('m0?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Returning a String'
task :rtsstring => :function do
  list = Dir.glob('m1?.*')
  Rake::Task[:execute].invoke(list)
end

desc 'Returning an Array'
task :rtsarray => :function do
  list = Dir.glob('m3?.*')
  Rake::Task[:execute].invoke(list)
end

# ==============================================
